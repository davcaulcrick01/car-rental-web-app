name: Deploy to AWS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: car-rental-app
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Trigger EC2 deployment
        run: |
          aws ec2 describe-instances \
            --filters "Name=tag:Environment,Values=Production" "Name=instance-state-name,Values=running" \
            --query 'Reservations[*].Instances[*].[InstanceId]' \
            --output text | while read instance; do
              aws ssm send-command \
                --instance-ids "$instance" \
                --document-name "AWS-RunShellScript" \
                --parameters commands=[\
                  "aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}",\
                  "docker pull ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:latest",\
                  "docker stop \$(docker ps -q) || true",\
                  "docker rm \$(docker ps -a -q) || true",\
                  "docker run -d -p 3000:3000 ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:latest"\
                ] 